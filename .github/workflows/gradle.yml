name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: make application.properties and keystore
        run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" >> ./application.properties
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > keystore.p12
        shell: bash

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cs-essence .
          docker push ${{ secrets.DOCKER_USERNAME }}/cs-essence

      - name: copy Dockerfile to ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: ./Dockerfile
          target: /home/${{ secrets.AWS_USER }}/

      - name: copy docker compose file to ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: ./docker-compose.yml
          target: /home/${{ secrets.AWS_USER }}/

      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cs-essence
            docker-compose up -d
            docker image prune -f